name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install --no-audit --no-fund
      - run: npm audit --audit-level=high
      - run: npm audit --prefix backend --audit-level=high

  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        options: --privileged
    steps:
      - name: Ensure Docker CLI
        run: |
          if ! command -v docker >/dev/null; then
            sudo apt-get update && sudo apt-get install -y docker.io
          fi
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Clean npm proxy settings
        run: |
          unset NPM_CONFIG_HTTP_PROXY NPM_CONFIG_HTTPS_PROXY
          npm config delete proxy
          npm config delete https-proxy
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: true
      - name: Cache Playwright browsers
        uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('backend/package-lock.json') }}
      - run: npm install --no-audit --no-fund
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright browsers
        env:
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '0'
        run: npx playwright install --with-deps
      - name: Install backend dependencies
        run: npm install --no-audit --no-fund --prefix backend

      - name: Validate ESLint modules
        run: |
          node -e "require.resolve('@eslint/js')" || \
            (echo '❌ @eslint/js not found' && exit 1)

      - name: Install Husky hooks
        run: npm run prepare

      - name: Run CI
        env:
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '0'
        run: npm run ci

      - name: Run coverage
        run: npm run coverage

      - name: Sanitize coverage for Coveralls
        run: |
          sed -r 's/\x1B\[[0-9;]*[JKmsu]//g' backend/coverage/lcov.info \
            > backend/coverage/lcov.sanitized.info

      - name: Upload to Coveralls
        run: cat backend/coverage/lcov.sanitized.info | npx coveralls

      - name: Check bundle size
        run: npm run bundle:size

      - name: Check for duplicate packages
        run: npm run deps:dedupe-check

      - name: Run Lighthouse CI
        if: github.event_name == 'pull_request'
        run: npm run lhci

      - name: Verify lockfiles
        run: |
          npm run deps:check
          git diff --exit-code package-lock.json
          git diff --exit-code backend/package-lock.json
          git diff --exit-code backend/hunyuan_server/package-lock.json

      - name: Audit dependencies
        run: |
          npm audit --audit-level=high
          npm audit --prefix backend --audit-level=high
          if [ -f backend/hunyuan_server/package.json ]; then
            npm audit --prefix backend/hunyuan_server --audit-level=high
          fi

      - name: Validate Snyk token
        if: ${{ secrets.SNYK_TOKEN }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          echo "Validating SNYK_TOKEN..."
          npx snyk auth --token=$SNYK_TOKEN

      - name: Snyk scan backend
        if: success() && secrets.SNYK_TOKEN
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: npx snyk test --severity-threshold=high --file=backend/package.json

      - name: Fallback to npm audit
        if: ${{ !secrets.SNYK_TOKEN }}
        run: |
          echo "⚠️ SNYK_TOKEN missing or invalid; running npm audit instead"
          npm audit --audit-level=high --prefix backend

      - name: Snyk scan hunyuan_server
        if: success() && secrets.SNYK_TOKEN && fileExists('backend/hunyuan_server/package.json')
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: npx snyk test --severity-threshold=high --file=backend/hunyuan_server/package.json

      - name: Run visual tests
        if: ${{ secrets.PERCY_TOKEN }}
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '0'
        run: npx percy exec -- npm run e2e

      - name: Run smoke tests
        if: ${{ !secrets.PERCY_TOKEN }}
        env:
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '0'
        run: npm run e2e

      - name: Run accessibility tests
        env:
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '0'
        run: npm run test:a11y

  a11y:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install --no-audit --no-fund
      - run: npm run a11y

      # ← you can add additional steps here, like your tests

  smoke-fallback:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install --no-audit --no-fund
      - name: Run smoke tests with fallback env
        env:
          STRIPE_TEST_KEY: dummy
        run: npm run smoke
