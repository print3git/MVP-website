Here are the remaining things to do before we pitch to investors:

Note: the lightweight Hunyuan3D API server files have been moved from the
`img/` directory to `backend/hunyuan_server/` so that `img/` only contains
image assets.

- Either by directly downloading Hunyuan 2.5, or by using an existing plugin for it, integrate this as
the model generator. Ensure it works for both text, images, and text+images prompts.

(optional for now, but certainly do these long-term)

Detailed tasks from the high-level project plan:

## 9. Community Creations Page

48. Add filters by category or date.

## 10. Testing & CI
50. Add GitHub Actions workflow for `npm test`.
51. Run prettier check in CI.
52. Add unit tests for frontend scripts.
53. Mock the Hunyuan API in server tests for error paths.

## 11. Documentation
55. Move notes in `READ-ME/` to a `docs/` folder.
56. Add architecture diagrams in `docs/`.

## 12. Cleanup & Polish
57. Normalize file names (rename `READ-ME` to `docs`).
58. Delete empty placeholder files.
59. Review all console logs.
60. Check for unused dependencies in `package.json`.
## Profiles System Plan

1. Add a `users` table storing id, username, email, password hash, and timestamps.
2. Implement API endpoints for user registration and login with hashed passwords.
3. Add session or token-based authentication middleware.
4. Provide sign-up and sign-in forms on the frontend.
5. Associate generated models with the authenticated user's id.
6. Expose an API to list all models created by a user.
7. Build a profile page showing a user's models and like counts.
8. Allow viewing other users' profiles by id or username.
9. Create a `likes` table linking `user_id` and `model_id`.
10. Implement endpoints to like and unlike models.
11. Display like counts in the community gallery and profiles.
12. Use like counts to populate the "popular now" list.
13. Create a `competitions` table with name and date fields.
14. Add a `competition_entries` table linking models to competitions.
15. Expose APIs to submit models to competitions and fetch leaderboards.
16. Show active competitions and leaderboards on the frontend.
