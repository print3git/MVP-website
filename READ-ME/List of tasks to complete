Here are the remaining things to do before we pitch to investors:

Note: the lightweight Hunyuan3D API server files have been moved from the
`img/` directory to `backend/hunyuan_server/` so that `img/` only contains
image assets.

- Either by directly downloading Hunyuan 2.5, or by using an existing plugin for it, integrate this as
the model generator. Ensure it works for both text, images, and text+images prompts.
- add 'share' options to twitter, facebook, tiktok, instagram

(optional for now, but certainly do these long-term)
- Configure the 'recent' and 'popular' pages on the Community Creations page
- add in a 'print2 discount' for customers who purchase 3 prints.
- add in an 'opt-out' button at the purchase page for adding the design to the 'Community Creations' page:
we want this to be opt-out to encourage as much sharing as possible, to build up the catalogue and 
encourage the community 

Detailed tasks from the high-level project plan:

## 4. Hunyuan3D Server
21. Remove temporary OBJ files after conversion.
22. Add Jest tests for error cases.

## 5. API Server
26. Add logging middleware.
29. Add pagination to `/api/status` in future.

## 6. Print Queue
30. Expose a process function to simulate printing.
31. Provide unit tests for queue functions.
32. Consider using a real queue module.

## 7. Stripe Integration
34. Implement the checkout page with Stripe.js.
35. Handle payment success or cancel on `payment.html`.

## 8. Front-End
38. Move inline scripts to separate JS files.
39. Create `share.js` for social-share logic.
40. Add share buttons for TikTok and Instagram.
41. Implement an opt-out checkbox for community gallery.
42. Add a “3-prints discount” notice.
43. Improve UI error handling.
44. Ensure accessibility with ARIA labels and contrast.

## 9. Community Creations Page
45. Fetch and display recent creations.
46. Fetch and display popular creations.
47. Implement pagination or infinite scrolling.
48. Add filters by category or date.
49. Store community submissions in a `community_creations` table.

## 10. Testing & CI
50. Add GitHub Actions workflow for `npm test`.
51. Run prettier check in CI.
52. Add unit tests for frontend scripts.
53. Mock the Hunyuan API in server tests for error paths.

## 11. Documentation
55. Move notes in `READ-ME/` to a `docs/` folder.
56. Add architecture diagrams in `docs/`.

## 12. Cleanup & Polish
57. Normalize file names (rename `READ-ME` to `docs`).
58. Delete empty placeholder files.
59. Review all console logs.
60. Check for unused dependencies in `package.json`.
## Profiles System Plan

1. Add a `users` table storing id, username, email, password hash, and timestamps.
2. Implement API endpoints for user registration and login with hashed passwords.
3. Add session or token-based authentication middleware.
4. Provide sign-up and sign-in forms on the frontend.
5. Associate generated models with the authenticated user's id.
6. Expose an API to list all models created by a user.
7. Build a profile page showing a user's models and like counts.
8. Allow viewing other users' profiles by id or username.
9. Create a `likes` table linking `user_id` and `model_id`.
10. Implement endpoints to like and unlike models.
11. Display like counts in the community gallery and profiles.
12. Use like counts to populate the "popular now" list.
13. Create a `competitions` table with name and date fields.
14. Add a `competition_entries` table linking models to competitions.
15. Expose APIs to submit models to competitions and fetch leaderboards.
16. Show active competitions and leaderboards on the frontend.
