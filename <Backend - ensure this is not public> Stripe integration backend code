// Hereâ€™s the complete backend code (Node.js + Express) that supports Stripe payments.
// .... there are some things I need to edit -
// 1. sk_test_YOUR_SECRET_KEY_HERE ====>  Replace with your Stripe Secret Key from the Stripe dashboard. Keep it private.
// 2. const amount = 2000; ===> Optional: Replace with dynamic pricing logic or retrieve from frontend.
// 3. CORS settings ====> You can restrict to a specific frontend domain instead of cors() open policy.
















// server.js

// Import dependencies
const express = require('express');
const app = express();
const stripe = require('stripe')('sk_test_YOUR_SECRET_KEY_HERE'); // ðŸ”’ Replace with your real secret key
const cors = require('cors');

// Middleware
app.use(cors()); // Allows frontend to call the backend
app.use(express.json()); // Parses JSON request bodies

// Route to create a PaymentIntent
app.post('/create-payment-intent', async (req, res) => {
  try {
    // Get order amount (use req.body.amount in real apps)
    const amount = 2000; // ðŸ’µ amount in pence (Â£20.00)

    // Create a PaymentIntent
    const paymentIntent = await stripe.paymentIntents.create({
      amount: amount,
      currency: 'gbp',
      automatic_payment_methods: { enabled: true },
    });

    // Send the client secret to the frontend
    res.send({
      clientSecret: paymentIntent.client_secret,
    });
  } catch (error) {
    console.error('Error creating PaymentIntent:', error);
    res.status(500).send({ error: error.message });
  }
});

// Start the server
const PORT = process.env.PORT || 4242;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
